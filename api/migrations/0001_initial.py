# Generated by Django 3.2.5 on 2021-07-15 13:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('note', models.TextField(blank=True, null=True)),
                ('level', models.CharField(choices=[('E', 'Easy'), ('M', 'Medium'), ('H', 'Hard')], max_length=20)),
                ('accuracy', models.IntegerField()),
                ('totalSubmissions', models.IntegerField()),
                ('sample_Tc', models.IntegerField()),
                ('total_Tc', models.IntegerField()),
                ('created_At', models.DateField(auto_now=True)),
                ('memory_Limit', models.IntegerField(blank=True, default=5120, null=True)),
                ('time_Limit', models.IntegerField(blank=True, default=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problemId', models.IntegerField()),
                ('language', models.IntegerField()),
                ('code', models.TextField()),
                ('status', models.CharField(default='Queued', max_length=30)),
                ('error', models.TextField(blank=True)),
                ('input_Given', models.TextField(blank=True)),
                ('output_Generated', models.TextField(blank=True)),
                ('test_Cases_Passed', models.IntegerField(blank=True)),
                ('total_Test_Cases', models.IntegerField(blank=True)),
                ('submission_Date_Time', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='UploadTC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testcases', models.FileField(blank=True, null=True, upload_to='tempTC/')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.problem')),
            ],
        ),
        migrations.AddField(
            model_name='problem',
            name='tags',
            field=models.ManyToManyField(to='api.Tag'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('first_Name', models.CharField(max_length=20)),
                ('last_Name', models.CharField(max_length=20)),
                ('access_token', models.TextField(blank=True, default='NA', null=True)),
                ('joining_Date', models.DateField(auto_now=True, verbose_name='date joined')),
                ('last_login', models.DateField(auto_now=True, verbose_name='last login')),
                ('questions_solved', models.IntegerField(blank=True, default=0, null=True)),
                ('questions_partiallySolved', models.IntegerField(blank=True, default=0, null=True)),
                ('questions_attemped', models.IntegerField(blank=True, default=0, null=True)),
                ('score', models.IntegerField(blank=True, default=0, null=True)),
                ('rank', models.IntegerField(blank=True, default=0, null=True)),
                ('problems_Solved', models.TextField(blank=True, null=True)),
                ('problems_Partially_Solved', models.TextField(blank=True, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('submissions', models.ManyToManyField(blank=True, to='api.Submission')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
